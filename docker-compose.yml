version: "3.2"
services:

  central-sql-db:
    container_name: central-sql-db
    image: mcr.microsoft.com/mssql/server:2019-CU10-ubuntu-20.04
    ports:
      - "44331:1433"
    environment:
      SA_PASSWORD: "T@k3H0m3"
      ACCEPT_EULA: "Y"
      MSSQL_PID : Developer 
    volumes:
     # directory with sql script on pc to /scripts/
     # - ./data/mssql:/scripts/
      - ./scripts/fl-central.sql:/scripts/fl-central.sql
    command:
      - /bin/bash
      - -c 
      - |
        # Launch MSSQL and send to background
        /opt/mssql/bin/sqlservr &
        # Wait for it to be available
        echo "Waiting for MS SQL to be available ⏳"
        /opt/mssql-tools/bin/sqlcmd -l 30 -S localhost -h-1 -V1 -U sa -P $$SA_PASSWORD -Q "SET NOCOUNT ON SELECT \"YAY WE ARE UP\" , @@servername"
        is_up=$$?
        while [ $$is_up -ne 0 ] ; do 
          echo -e $$(date) 
          /opt/mssql-tools/bin/sqlcmd -l 30 -S localhost -h-1 -V1 -U sa -P $$SA_PASSWORD -Q "SET NOCOUNT ON SELECT \"YAY WE ARE UP\" , @@servername"
          is_up=$$?
          sleep 5 
        done
        # Run every script in /scripts
        # TODO set a flag so that this is only done once on creation, 
        #      and not every time the container runs
        for foo in /scripts/*.sql
          do /opt/mssql-tools/bin/sqlcmd -U sa -P $$SA_PASSWORD -l 30 -e -i $$foo
        done
        # So that the container doesn't shut down, sleep this thread
        sleep infinity


  eventlogs-db:
    container_name: eventlogs-db
    image: mcr.microsoft.com/mssql/server:2019-CU10-ubuntu-20.04
    ports:
      - "44332:1433"
    environment:
      SA_PASSWORD: "T@k3H0m3"
      ACCEPT_EULA: "Y"
      MSSQL_PID : Developer       
    volumes:
     # directory with sql script on pc to /scripts/
     # - ./data/mssql:/scripts/
      - ./scripts/fl-eventlogs.sql:/scripts/fl-eventlogs.sql
    command:
      - /bin/bash
      - -c 
      - |
        # Launch MSSQL and send to background
        /opt/mssql/bin/sqlservr &
        # Wait for it to be available
        echo "Waiting for MS SQL to be available ⏳"
        /opt/mssql-tools/bin/sqlcmd -l 30 -S localhost -h-1 -V1 -U sa -P $$SA_PASSWORD -Q "SET NOCOUNT ON SELECT \"YAY WE ARE UP\" , @@servername"
        is_up=$$?
        while [ $$is_up -ne 0 ] ; do 
          echo -e $$(date) 
          /opt/mssql-tools/bin/sqlcmd -l 30 -S localhost -h-1 -V1 -U sa -P $$SA_PASSWORD -Q "SET NOCOUNT ON SELECT \"YAY WE ARE UP\" , @@servername"
          is_up=$$?
          sleep 5 
        done
        # Run every script in /scripts
        # TODO set a flag so that this is only done once on creation, 
        #      and not every time the container runs
        for foo in /scripts/*.sql
          do /opt/mssql-tools/bin/sqlcmd -U sa -P $$SA_PASSWORD -l 30 -e -i $$foo
        done
        # So that the container doesn't shut down, sleep this thread
        sleep infinity      
        

  datalake:
    container_name: datalake
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: T@k3H0m3
        

  data-activity-service:
    container_name: data-activity-service
    build: DataActivityService/.
    restart: always
    environment:
      SA_PASSWORD: "T@k3H0m3"
      EVENTLOGS: eventlogs-db
      CENTRAL: central-sql-db
      SERVICE_NAME: FL_DATA_EXCERISE_SERVICE
          
          
      